-- assignment2.sql

-- ============================================
-- Create ENUM type for account_type
-- ============================================

-- DROP TYPE IF EXISTS public.account_type;

CREATE TYPE public.account_type AS ENUM
    ('Client', 'Employee', 'Admin');

ALTER TYPE public.account_type
    OWNER TO cse340db;

-- ============================================
-- Table structure for 'classification'
-- ============================================

-- DROP TABLE IF EXISTS public.classification;

CREATE TABLE public.classification (
    classification_id INT GENERATED BY DEFAULT AS IDENTITY,
    classification_name CHARACTER VARYING NOT NULL,
    CONSTRAINT classification_pk PRIMARY KEY (classification_id)
);

-- ============================================
-- Table structure for 'account'
-- ============================================

-- DROP TABLE IF EXISTS public.account;

CREATE TABLE public.account (
    account_id INT GENERATED BY DEFAULT AS IDENTITY,
    first_name CHARACTER VARYING NOT NULL,
    last_name CHARACTER VARYING NOT NULL,
    email CHARACTER VARYING NOT NULL,
    password CHARACTER VARYING NOT NULL,
    account_type public.account_type DEFAULT 'Client',
    CONSTRAINT account_pk PRIMARY KEY (account_id)
);

-- ============================================
-- Task 1: Insert Tony Stark record
-- ============================================

INSERT INTO public.account (first_name, last_name, email, password)
VALUES ('Tony', 'Stark', 'tony@starkent.com', 'Iam1ronM@n');

-- ============================================
-- Task 2: Update Tony Stark record to Admin
-- ============================================

UPDATE public.account
SET account_type = 'Admin'
WHERE email = 'tony@starkent.com';

-- ============================================
-- Task 3: Delete Tony Stark record
-- ============================================

DELETE FROM public.account
WHERE email = 'tony@starkent.com';


-- 4. Update "GM Hummer" description using REPLACE
UPDATE inventory
SET inv_description = REPLACE(inv_description, 'small interiors', 'a huge interior')
WHERE inv_make = 'GM' AND inv_model = 'Hummer';

-- 5. Inner join to select make, model, and classification name for "Sport" category
SELECT i.inv_make, i.inv_model, c.classification_name
FROM inventory i
INNER JOIN classification c
ON i.classification_id = c.classification_id
WHERE c.classification_name = 'Sport';

-- 6. Update all inventory paths to include "/vehicles" in inv_image and inv_thumbnail
UPDATE inventory
SET inv_image = REPLACE(inv_image, '/images/', '/images/vehicles/'),
    inv_thumbnail = REPLACE(inv_thumbnail, '/images/', '/images/vehicles/');